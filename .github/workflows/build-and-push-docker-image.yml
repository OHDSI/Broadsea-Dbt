# Build Docker image and push to Docker Hub
name: build-and-push-docker-image

on:

  # support manual trigger of this action
  workflow_dispatch:

  # Run this action every Saturday at midnight UTC
  schedule:
    - cron: '0 0 * * 6'

#  push:
#    branches:
#      - main
#    tags:
#      - '*'

env:
  DOCKER_IMAGE: ohdsi/broadsea-dbt
  DOCKER_IMAGE_VERSION: "1.0.0" 

jobs:

  # Build Docker container and push to Docker Hub
  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=raw,value=${{ env.DOCKER_IMAGE_VERSION }}
            type=sha
            type=raw,value=latest
          labels: |
            org.opencontainers.image.version=${{ env.DOCKER_IMAGE_VERSION }}
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.created=${{ steps.docker_meta.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set build parameters
        id: build_params
        run: |
          echo "datetime=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          echo "sha8=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
          echo "push=false" >> $GITHUB_OUTPUT
          echo "load=false" >> $GITHUB_OUTPUT
          echo "platforms=linux/amd64,linux/arm64" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
           
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          platforms: ${{ steps.build_params.outputs.platforms }}
          push: ${{ steps.build_params.outputs.push }}
          load: ${{ steps.build_params.outputs.load }}
          build-args: |
            GIT_BRANCH=${{ env.VERSION }}
            GIT_COMMIT_ID_ABBREV=${{ steps.build_params.outputs.sha8 }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: |
            ${{ steps.docker_meta.outputs.labels }}
            org.opencontainers.image.authors=Lee Evans - www.ltscomputingllc.com
            org.opencontainers.image.vendor=OHDSI
            org.opencontainers.image.licenses=Apache-2.0

      - name: Log generated Docker image tags
        id: log_tags
        run: |
          echo "Generated tags: ${{ steps.docker_meta.outputs.tags }}"
          echo "Generated labels: ${{ steps.docker_meta.outputs.labels }}"
            
      - name: Pull Docker image from Docker Hub
        run: |
           docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Inspect image
        run: |
          docker image inspect ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Install Docker Scout
        run: |
          curl -Ls https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh

      - name: Run Docker Scout to show Quickview
        run: |
           docker scout quickview ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_VERSION }}
      
      - name: Run Docker Scout to generate Software Bill Of Materials as a list
        run: |
           docker scout sbom --format list ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_VERSION }} | tee sbom-${{ steps.build_params.outputs.sha8 }}-${{ steps.build_params.outputs.datetime }}.txt

      - name: Upload SBOM report as an artifact retained for 90 days
        uses: actions/upload-artifact@v3
        with:
          name: sbom-${{ steps.build_params.outputs.sha8 }}-${{ steps.build_params.outputs.datetime }}
          path: sbom-${{ steps.build_params.outputs.sha8 }}-${{ steps.build_params.outputs.datetime }}.txt
          retention-days: 90
          
      - name: Run Docker scout to generate list of CVEs
        run: |
           docker scout cves ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_VERSION }} | tee cves-${{ steps.build_params.outputs.sha8 }}-${{ steps.build_params.outputs.datetime }}.txt

      - name: Upload CVE Report as an artifact retained for 90 days
        uses: actions/upload-artifact@v3
        with:
          name: cves-${{ steps.build_params.outputs.sha8 }}-${{ steps.build_params.outputs.datetime }}
          path: cves-${{ steps.build_params.outputs.sha8 }}-${{ steps.build_params.outputs.datetime }}.txt
          retention-days: 90
